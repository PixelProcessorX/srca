// Student Recreation Center Application
// (Database Code by Dillon Simion)

/*import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;*/
import java.sql.*;
import java.util.ArrayList;
// Notice, do not import com.mysql.jdbc.* or you will have problems!


/*
 * 
 *  Timestamp stamp = new Timestamp(System.currentTimeMillis());
  Date date = new Date(stamp.getTime());
  System.out.println(date);
 * 
 */

public class RCDB
{
	//These are used in other files to login to the database.
	public static boolean debugmode = true;        //Enable debug outputs for developers?
	public static String  dbName    = "rcdb";      //Name of the mySQL Database
	public static String  where     = "localhost"; //IP address or URL after //, etc...
	public static int     port      = 3306;        //The port the MySQL database is active on.
	public static String  username  = "JavaAdmin";//"RcAppReadOnlyAcc";
	public static String  password  = "12345";//"naUoDPnrSJXRi8HI2p";
	
	public static void main(String[] args) {
		try{
		Connection c = DB.ConnectToDatabase();
			
		
		//myStmt1.setNull(1, Types.INTEGER);
		/*CallableStatement myStmt1 = c.prepareCall("{call StoredProcedure(?,?,?,?);}");
		myStmt1.setString(1, "First Arg");
		myStmt1.setString(2, "Second Arg");
		myStmt1.setInt(3,    567);
		myStmt1.setString(4, "InOut Example"); //For IN
		myStmt1.registerOutParameter(4, Types.VARCHAR); //For OUT
		myStmt1.execute();
		myStmt1.getString(4);//Get Returned OUT Value
		ResultSet myRs = myStmt1.getResultSet(); //To retrieve the table results.
		ResultSetMetaData myRd = myRs.getMetaData();
		
		Statement myStmt0 = c.createStatement();
		String sqlI = "insert into rcdb.table (field, field, field) values ('col0','col1','col2')";
		String sqlU = "update rcdb set columnName='value' where columnA=value";
		String sqlD = "delete from rcdb where columnA=value";
		myStmt0.executeUpdate(sqlI);*/
		
		// 
		
		
		ExecuteSQL(c,"SELECT users.* FROM users WHERE true;");
		ExecuteSQL(c,"SELECT events_.* FROM events_ WHERE true;");
		ExecuteSQL(c,"SELECT userevents.* FROM userevents WHERE true;");
		ExecuteSQL(c,"SELECT cats_event.* FROM cats_event WHERE true;");
		ExecuteSQL(c,"SELECT cats_fit.* FROM cats_fit WHERE true;");
		ExecuteSQL(c,"SELECT cats_impr.* FROM cats_impr WHERE true;");
		
		
		
		
		
		}catch(Exception e){
		    throw new IllegalStateException("Generic Exception Catch Triggered", e);
		}
	}
	static void PrintResultSet(ResultSet rs)
	{
		try{
			ResultSetMetaData rsmd = rs.getMetaData();
			int columnsNumber = rsmd.getColumnCount();
			while (rs.next()) {
			    for (int i = 1; i <= columnsNumber; i++) {
			        if (i > 1) System.out.print(",  ");
			        String columnValue = rs.getString(i);
			        System.out.print(columnValue + " " + rsmd.getColumnName(i));
			    }
			    System.out.println("");
			}
			System.out.println("\r\n");
		}catch(Exception e){
		    throw new IllegalStateException("Error Printing Records!!", e);
		}
	}
	static void ExecuteSQL(Connection c, String sql)
	{
		try{
			Statement s = c.createStatement();
			s.executeQuery(sql);
			ResultSet rs = s.getResultSet();
			PrintResultSet(rs);
		}catch(Exception e){
		    throw new IllegalStateException("Error Retrieving Records or Executing Query!!", e);
		}
	}
	
	
}
